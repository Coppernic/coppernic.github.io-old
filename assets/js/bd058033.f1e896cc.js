"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[5530],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return s}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=t.createContext({}),a=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},l=function(e){var r=a(e.components);return t.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),f=a(n),s=o,m=f["".concat(u,".").concat(s)]||f[s]||d[s]||i;return n?t.createElement(m,c(c({ref:r},l),{},{components:n})):t.createElement(m,c({ref:r},l))}));function s(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=f;var p={};for(var u in r)hasOwnProperty.call(r,u)&&(p[u]=r[u]);p.originalType=e,p.mdxType="string"==typeof e?e:o,c[1]=p;for(var a=2;a<i;a++)c[a]=n[a];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6210:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return l},default:function(){return f}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),c=["components"],p={},u="Finger print",a={unversionedId:"product/cone-eid/fingerprint",id:"product/cone-eid/fingerprint",isDocsHomePage:!1,title:"Finger print",description:"C-One\xb2 e-ID",source:"@site/docs/product/cone-eid/fingerprint.md",sourceDirName:"product/cone-eid",slug:"/product/cone-eid/fingerprint",permalink:"/docs/product/cone-eid/fingerprint",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/product/cone-eid/fingerprint.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C-One\xb2 e-ID",permalink:"/docs/product/cone-eid/cone-eid"},next:{title:"OCR",permalink:"/docs/product/cone-eid/ocr"}},l=[{value:"C-One\xb2 e-ID",id:"c-one-e-id",children:[]}],d={toc:l};function f(e){var r=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"finger-print"},"Finger print"),(0,i.kt)("h2",{id:"c-one-e-id"},"C-One\xb2 e-ID"),(0,i.kt)("p",null,"C-One\xb2 e-ID embeds a Fingerprint reader for enrollment applications."),(0,i.kt)("p",null,"For reader management, documentation and sample code can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Coppernic/ColumboFPSample"},"here"),"."))}f.isMDXComponent=!0}}]);