"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[2195],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(t),h=a,g=d["".concat(c,".").concat(h)]||d[h]||p[h]||o;return t?r.createElement(g,l(l({ref:n},u),{},{components:t})):r.createElement(g,l({ref:n},u))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8414:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={},c=void 0,s={unversionedId:"sdk/core/ethernet",id:"sdk/core/ethernet",isDocsHomePage:!1,title:"ethernet",description:"Ethernet",source:"@site/docs/sdk/core/ethernet.md",sourceDirName:"sdk/core",slug:"/sdk/core/ethernet",permalink:"/docs/sdk/core/ethernet",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/sdk/core/ethernet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Core",permalink:"/docs/sdk/core/core"},next:{title:"HDK for C-One",permalink:"/docs/sdk/core/hdk_cone"}},u=[{value:"Ethernet",id:"ethernet",children:[{value:"Getting started",id:"getting-started",children:[]}]}],p={toc:u};function d(e){var n=e.components,i=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"ethernet"},"Ethernet"),(0,o.kt)("p",null,"Some devices can have Ethernet feature built-in. Ethernet is available through docking station. These devices are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"access"),(0,o.kt)("li",{parentName:"ul"},"C-One"),(0,o.kt)("li",{parentName:"ul"},"C-One\xb2"),(0,o.kt)("li",{parentName:"ul"},"C-One e-ID"),(0,o.kt)("li",{parentName:"ul"},"C-One\xb2 e-ID")),(0,o.kt)("p",null,'For C-One\xb2 and C-One\xb2 e-ID from OS Build 20190329, an option has been added to have the choice between Ethernet through docking station or Ethernet through USB\ndongle. This option is called "Ethernet Cradle".'),(0,o.kt)("p",null,"It is available on device Settings."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'"Ethernet Cradle" on -> Ethernet is used through docking'),(0,o.kt)("li",{parentName:"ul"},'"Ethernet Cradle" off -> Ethernet is used through USB dongle.')),(0,o.kt)("p",null,'In both case,"Ethernet" option should be enabled to make the "Ethernet Cradle" option available.'),(0,o.kt)("p",null,"When Ethernet is activated, USB port of C-One\xb2 is in Host mode. C-One\xb2 cannot be charged by USB anymore and plugging device on PC will do nothing. Device\ncharge is available only through docking station with AC plug connected and powered:"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(363).Z,title:":size=230"}),"  ",(0,o.kt)("img",{src:t(2493).Z,title:":size=230"}),"  ",(0,o.kt)("img",{src:t(286).Z,title:":size=230"})),(0,o.kt)("h3",{id:"getting-started"},"Getting started"),(0,o.kt)("p",null,'API to enable Ethernet and "Ethernet Cradle" option is available through ',(0,o.kt)("inlineCode",{parentName:"p"},"EthernetConnector")," class. It is available on CpcCore from version\n",(0,o.kt)("a",{parentName:"p",href:"https://nexus.coppernic.fr/#browse/browse:libs-release:fr%2Fcoppernic%2Fsdk%2Fcore%2FCpcCore%2F1.8.17"},"1.8.17")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Getting ",(0,o.kt)("inlineCode",{parentName:"li"},"EthernetConnector"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class Net {\n    private val manager = EthernetServiceManager()\n\n    private var connector: EthernetConnector? = null\n\n    fun getConnector() {\n        manager.get().getConnector(context).subscribe({\n            connector = it\n        }, {\n            // Handle error\n        })\n    }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Enable Ethernet:"),(0,o.kt)("p",{parentName:"li"}," -For access device only:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'val SET_ETH_ENABLE_ACTION = "android.net.ethernet.SET_ETH_ENABLE_ACTION"\nval SET_ETH_DISABLE_ACTION = "android.net.ethernet.SET_ETH_DISABLE_ACTION"\n// Enable Ethernet:\nval intent = Intent(SET_ETH_ENABLE_ACTION)\ncontext.sendBroadcast(intent)\n\n// Disable Ethernet:\nval intent = Intent(SET_ETH_DISABLE_ACTION)\ncontext.sendBroadcast(intent)\n\n')),(0,o.kt)("p",{parentName:"li"},"-For other devices (C-One)"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class Net {\n    private var connector: EthernetConnector? = null\n\n    fun enableEthernet(enable: Boolean) {\n        connector?.enableEthernet(enable)\n    }\n}\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Enable Cradle:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class Net {\n    private var connector: EthernetConnector? = null\n\n    fun enableCradle(enable: Boolean) {\n        connector?.enableCradle(enable)\n    }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Release internal resources when done:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class Net {\n    private var connector: EthernetConnector? = null\n\n    fun releaseResources() {\n        connector?.close(enable)\n    }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Configure static IP address:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'class Net {\n    fun congigureStaticIp() {\n        StaticIpConfig.configureStatisIp(context,\n                        "10.0.1.10", //IP Address\n                        "24", //network prefix length\n                        "10.0.0.2", //Gateway\n                        "",//first DNS\n                        "") //second DNS\n    }\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Configure DHCP (available on CpcCore from version ",(0,o.kt)("a",{parentName:"li",href:"https://nexus.coppernic.fr/#browse/browse:libs-release:fr%2Fcoppernic%2Fsdk%2Fcore%2FCpcCore%2F2.0.2"},"2.0.2"),")")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class Net {\n    /**\n     * Configure DHCP on C-One 2 and Access\n     *\n     * This API is available on OS from 20210326\n     *\n     */\n    fun congigureDHCP() {\n        StaticIpConfig.configureDHCP(context)\n    }\n}\n")))}d.isMDXComponent=!0},363:function(e,n,t){n.Z=t.p+"assets/images/settings_ethernet-0e1d8cd55d20c87299647fd1a50392e0.png"},2493:function(e,n,t){n.Z=t.p+"assets/images/settings_ethernet_2-50e774718a74b0f968ec75450f225634.png"},286:function(e,n,t){n.Z=t.p+"assets/images/settings_ethernet_3-ab7aaa5a14f3016895c2506fc1b1e886.png"}}]);