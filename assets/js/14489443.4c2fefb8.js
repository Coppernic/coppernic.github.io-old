"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[4723],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,m=u["".concat(p,".").concat(g)]||u[g]||s[g]||i;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9806:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},p="Agrident Wedge",c={unversionedId:"app/agrident_wedge",id:"app/agrident_wedge",isDocsHomePage:!1,title:"Agrident Wedge",description:"Introduction",source:"@site/docs/app/agrident_wedge.md",sourceDirName:"app",slug:"/app/agrident_wedge",permalink:"/docs/app/agrident_wedge",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/app/agrident_wedge.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ID Platform",permalink:"/docs/product/idplatform"},next:{title:"HID iClass Wedge",permalink:"/docs/app/iclass_wedge"}},d=[{value:"Introduction",id:"introduction",children:[]},{value:"Prerequisites",id:"prerequisites",children:[{value:"C-One\xb2 LF Agrident",id:"c-one-lf-agrident",children:[]}]},{value:"What is a keyboard wedge?",id:"what-is-a-keyboard-wedge",children:[]},{value:"Agrident settings",id:"agrident-settings",children:[]},{value:"Agrident Wedge Scan",id:"agrident-wedge-scan",children:[]}],s={toc:d};function u(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"agrident-wedge"},"Agrident Wedge"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This application demonstrates how to use the Agrident Wedge application on a C-One\xb2 with LF Agrident RFID reader.\nThe application is composed of two parts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Agrident Wedge Settings (AW Settings)"),(0,i.kt)("li",{parentName:"ul"},"Agrident Wedge Scan (AW Scan)")),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("h3",{id:"c-one-lf-agrident"},"C-One\xb2 LF Agrident"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"CoreServices version 1.9.0 and above must be installed on the device.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Agrident Wedge 2.4.0 and above must be installed on the device."),(0,i.kt)("p",{parentName:"li"},"The applications above can be found on ",(0,i.kt)("a",{parentName:"p",href:"/docs/start/copperapps"},"CopperApps"),"."))),(0,i.kt)("h2",{id:"what-is-a-keyboard-wedge"},"What is a keyboard wedge?"),(0,i.kt)("p",null,"A keyboard wedge is an application that can acquire data and send it directly into the keyboard buffer, just as if it was typed on a virtual keyboard."),(0,i.kt)("p",null,"Coppernic's wedge applications add a deeper integration capability by using Android ",(0,i.kt)("inlineCode",{parentName:"p"},"Intent")," in order to send reader's events (successful read or read failure)."),(0,i.kt)("h2",{id:"agrident-settings"},"Agrident settings"),(0,i.kt)("p",null,"Agrident Settings allows configuring wedge for the Sound, Timeout and so on..."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(5790).Z})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Scan Sound: plays a sound after a good or bad read."),(0,i.kt)("li",{parentName:"ul"},"Scan Display: displays an icon while reader is scanning."),(0,i.kt)("li",{parentName:"ul"},"Scan Timeout: allows setting time in seconds while the device is trying to read a tag."),(0,i.kt)("li",{parentName:"ul"},"Agrident Service startup boot: when enabled, the service will start automatically when the device boots."),(0,i.kt)("li",{parentName:"ul"},"Continuous Read: reads continuously until service is stopped or screen turns off."),(0,i.kt)("li",{parentName:"ul"},"Keyboard Wedge: when enabled, it will send result to the keyboard buffer. It is still broadcasting Intents."),(0,i.kt)("li",{parentName:"ul"},"Scan Enter: adds a carriage return of the data read in keyboard buffer."),(0,i.kt)("li",{parentName:"ul"},"Remove leading 0: Remove 0 from the first data sent.")),(0,i.kt)("h2",{id:"agrident-wedge-scan"},"Agrident Wedge Scan"),(0,i.kt)("p",null," This application just starts a scan to read an LF tag.\nYou can use it remapping this application to one (or more) of the 3 programmable buttons. You can do it on the device in Settings > Remap key & shortcut."),(0,i.kt)("p",null," Using Agrident Wedge as a regular keyboard wedge"),(0,i.kt)("hr",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Remap the Agrident Wedge application to one (or more) of the 3 programmable buttons of the C-One."),(0,i.kt)("li",{parentName:"ul"},"Push the button."),(0,i.kt)("li",{parentName:"ul"},"Data will be sent as keyboard entries directly to the system.")),(0,i.kt)("p",null," Using Agrident Wedge with Intents."),(0,i.kt)("hr",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For this example, Coppernic Utility library is used. You must declare it in build.gradle:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-groovy"},'// At project level\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        maven { url "https://nexus.coppernic.fr/repository/libs-release" }\n    }\n}\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-groovy"},"// At module level\ndependencies {\n    implementation 'fr.coppernic.sdk.cpcutils:CpcUtilsLib:6.13.0'\n}\n")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Declare a broadcast receiver in your class, it will receive the intents from the Agrident Wedge application:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"private BroadcastReceiver agridentReceiver = new BroadcastReceiver() {\n    @Override\n    public void onReceive(Context context, Intent intent) {        \n        if (intent.getAction().equals(CpcDefinitions.ACTION_AGRIDENT_SUCCESS)) {\n            // Data is available as a String\n            String dataRead = intent.getStringExtra(CpcDefinitions.KEY_BARCODE_DATA);           \n        } else if (intent.getAction().equals(CpcDefinitions.ACTION_AGRIDENT_ERROR)) {\n            // Read failed (main cause is timeout)\n        }\n    }\n};\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Register the receiver, for example in onStart:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Override\nprotected void onStart() {\n    super.onStart();\n    // Registers agrident wedge intent receiver\n    IntentFilter intentFilter = new IntentFilter();\n    intentFilter.addAction(CpcDefinitions.ACTION_AGRIDENT_SUCCESS);\n    intentFilter.addAction(CpcDefinitions.ACTION_AGRIDENT_ERROR);\n    registerReceiver(agridentReceiver, intentFilter);\n}    \n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"And unregister it, in onStop for example:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Override\nprotected void onStop() {\n    // Unregisters agrident wedge receiver\n    unregisterReceiver(agridentReceiver);\n    super.onStop();\n}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Trig a read:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'private static final String AGRIDENT_WEDGE = "fr.coppernic.tools.cpcagridentwedge";\n\n// Starts Agrident wedge\nIntent launchIntent = getPackageManager().getLaunchIntentForPackage(AGRIDENT_WEDGE);\nif (launchIntent != null) {\n    startActivity(launchIntent);//null pointer check in case package name was not found\n}\n')),(0,i.kt)("p",{parentName:"li"},"If you don't want to declare CpcUtilsLib in your build, then here are\nstring values:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public static final String ACTION_AGRIDENT_SUCCESS = "fr.coppernic.intent.agridentsuccess";\npublic static final String ACTION_AGRIDENT_ERROR = "fr.coppernic.intent.agridentfailed";\npublic static final String ACTION_AGRIDENT_SERVICE_STOP = "fr.coppernic.intent.action.stop.agrident.service";\npublic static final String ACTION_AGRIDENT_SERVICE_START = "fr.coppernic.intent.action.start.agrident.service";\npublic static final String ACTION_AGRIDENT_READ = "fr.coppernic.tools.agrident.wedge.READ";\npublic static final String KEY_BARCODE_DATA = "BarcodeData";\n')))))}u.isMDXComponent=!0},5790:function(e,t,n){t.Z=n.p+"assets/images/agrident_settings-aff05c01ffe6ad32b78632e2de10243a.png"}}]);