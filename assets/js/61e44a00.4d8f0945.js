"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[8591],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,v=m["".concat(l,".").concat(d)]||m[d]||s[d]||o;return n?r.createElement(v,a(a({ref:t},u),{},{components:n})):r.createElement(v,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8090:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={},l="Time",p={unversionedId:"sdk/privileged/time",id:"sdk/privileged/time",isDocsHomePage:!1,title:"Time",description:"API",source:"@site/docs/sdk/privileged/time.md",sourceDirName:"sdk/privileged",slug:"/sdk/privileged/time",permalink:"/docs/sdk/privileged/time",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/sdk/privileged/time.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Privileged library",permalink:"/docs/sdk/privileged/privileged"},next:{title:"C-One\xb2",permalink:"/docs/product/cone/cone"}},u=[{value:"API",id:"api",children:[]},{value:"Setup",id:"setup",children:[]}],s={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"time"},"Time"),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Available from version 0.3")),(0,o.kt)("p",null,"This API allows calling application to configure time on Android device."),(0,o.kt)("p",null,"This API is protected. Application shall be in list of authorised application in\nprivileged service. Application can also send an API key if it is not in this list.\nAPI key is given by Coppernic dev team and shall stay secret."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Getting TimeConnector object")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'TimeServiceConnector.Manager.get().getConnector(context, new ServiceEmitter() {\n    public void onSuccess(TimeServiceConnector timeServiceConnector) {\n        // Yeah !\n\n        // Authenticate calling application with an API key\n        timeServiceConnector.auth("");\n    }\n\n    public void onError( Throwable t) {\n       // :-(\n       Timber.e(t);\n    }\n})\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Set time")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"timeServiceConnector.setTime(millis);\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Set time Zone")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'// Accept only Olson ID\ntimeServiceConnector.setTime("Europe/Paris")\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Auto time")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"timeServiceConnector.enableAutoTime(true);\n\ntimeServiceConnector.getAutoTime(true);\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Auto time zone")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"timeServiceConnector.enableAutoTimeZone(true);\n\ntimeServiceConnector.getAutoTimeZone(true);\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Close connector when done")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"timeServiceConnector.close();\n")),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"build.gradle")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'repositories {\n    maven { url "https://nexus.coppernic.fr/repository/libs-release" }\n}\n\ndependencies {\n    implementation "fr.coppernic.lib.privileged:Privileged:0.5.1"\n}\n')))}m.isMDXComponent=!0}}]);