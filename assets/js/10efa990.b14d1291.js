"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[3522],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),c=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=a,f=p["".concat(o,".").concat(g)]||p[g]||d[g]||r;return n?i.createElement(f,s(s({ref:t},u),{},{components:n})):i.createElement(f,s({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2313:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),s=["components"],l={},o="HID iClass Wedge",c={unversionedId:"app/iclass_wedge",id:"app/iclass_wedge",isDocsHomePage:!1,title:"HID iClass Wedge",description:"Introduction",source:"@site/docs/app/iclass_wedge.md",sourceDirName:"app",slug:"/app/iclass_wedge",permalink:"/docs/app/iclass_wedge",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/app/iclass_wedge.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Agrident Wedge",permalink:"/docs/app/agrident_wedge"},next:{title:"App management",permalink:"/docs/app/management"}},u=[{value:"Introduction",id:"introduction",children:[]},{value:"Prerequisites",id:"prerequisites",children:[{value:"C-One\xb2 iClass",id:"c-one-iclass",children:[]}]},{value:"What is a keyboard wedge?",id:"what-is-a-keyboard-wedge",children:[]},{value:"iCLass settings",id:"iclass-settings",children:[]},{value:"iClass scan",id:"iclass-scan",children:[]},{value:"Using iClass Wedge with intents in your application",id:"using-iclass-wedge-with-intents-in-your-application",children:[]}],d={toc:u};function p(e){var t=e.components,l=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hid-iclass-wedge"},"HID iClass Wedge"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This application demonstrates how to use the HID iClass/LF Prox Wedge application on a C-One\xb2 with HID iClass/LF Prox RFID reader.\nThe application is composed of two parts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"iClass Settings,"),(0,r.kt)("li",{parentName:"ul"},"iClass Scan.")),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("h3",{id:"c-one-iclass"},"C-One\xb2 iClass"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CoreServices version 1.9.0 and above must be installed on the device.")),(0,r.kt)("h2",{id:"what-is-a-keyboard-wedge"},"What is a keyboard wedge?"),(0,r.kt)("p",null,"A keyboard wedge is an application that can acquire data and send it directly in the keyboard buffer, just as if it was typed on a virtual keyboard."),(0,r.kt)("p",null,"Coppernic's wedge applications add a deeper integration capability by using Android intent in order to send reader's events (successful read or read failure)."),(0,r.kt)("h2",{id:"iclass-settings"},"iCLass settings"),(0,r.kt)("p",null,"iCLass Settings allows confuring wedge for the Sound, Timeout and so on...\nSettings screen is composed of four sections :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Service"),(0,r.kt)("li",{parentName:"ul"},"Scan"),(0,r.kt)("li",{parentName:"ul"},"Keyboard wedge"),(0,r.kt)("li",{parentName:"ul"},"Reader Configuration")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(2921).Z})," ",(0,r.kt)("img",{src:n(3098).Z})),(0,r.kt)("p",null,"1.Service"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enable service : you can start or stop the service with this option."),(0,r.kt)("li",{parentName:"ul"},"Hid iClass Service startup boot : when it is enabled, the service will start\nautomatically when the device boot."),(0,r.kt)("li",{parentName:"ul"},"On/off reader for each scan : when enabled, it will power off reader after scanning\n(either for bad or good read). It will save battery, but can be a little bit longer\nto read as you will need to power on the reader every time.")),(0,r.kt)("p",null," 2.Scan"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sound : play a sound after a good or bad scan."),(0,r.kt)("li",{parentName:"ul"},"Display : display an icon while scanning."),(0,r.kt)("li",{parentName:"ul"},"Timeout : allow setting time in seconds while the device is trying to read a tag.")),(0,r.kt)("p",null," 3.Keyboard Wedge"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enable Keyboard : when enabled, it will send result to the keyboard buffer. It is still broadcasting Intents."),(0,r.kt)("li",{parentName:"ul"},"Scan Enter : add a carriage return of the data reader."),(0,r.kt)("li",{parentName:"ul"},"Data Send : you can choose either between card number and facility code to send to the keyboard buffer."),(0,r.kt)("li",{parentName:"ul"},"Facility code : depending on the card you want to read, card number will be different if card has a facility code or not.")),(0,r.kt)("p",null,"  4.Reader configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hid Card configuration : allows using an HID card configuration. You need to present and hold the card front of the antenna until the configuration is finished.")),(0,r.kt)("h2",{id:"iclass-scan"},"iClass scan"),(0,r.kt)("p",null," This application just start a scan to read an iClass/LF prox card.\nYou can use it remapping this application to on (or more) of the 3 programmable button. You can do it on the device in Settings > Remap key & shortcut."),(0,r.kt)("h2",{id:"using-iclass-wedge-with-intents-in-your-application"},"Using iClass Wedge with intents in your application"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For this example, Coppernic Core library is used. You must declare it in build.gradle.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'// At project level\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        maven { url "https://nexus.coppernic.fr/repository/libs-release" }\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"// At module level\nimplementation 'fr.coppernic.sdk.core:CpcCore:1.9.1'\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Declare a broadcast receiver in your class, it will receive the intents from the iClass Wedge application.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private BroadcastReceiver iClassReceiver = new BroadcastReceiver() {\n    @Override\n    public void onReceive(Context context, Intent intent) {        \n        if (intent.getAction().equals(Defines.IntentDefines.ACTION_HID_ICLASS_SUCCESS)) {\n            //All data received by the reader without any parsing\n            Byte[] data = intent.getByteArrayExtra(Defines.Keys.KEY_HID_ICLASS_DATA_BYTES)\n            String cardNumber = intent.getStringExtra(Defines.Keys.KEY_HID_ICLASS_DATA_CARD_NUMBER);  \n            String companyCode = intent.getStringExtra(Defines.Keys.KEY_HID_ICLASS_DATA_COMPANY_CODE);  \n            String facilityCode = intent.getStringExtra(Defines.Keys.KEY_HID_ICLASS_DATA_FACILITY_CODE);  \n            String pacs = intent.getStringExtra(Defines.Keys.KEY_HID_ICLASS_DATA_PACS);\n            //CArd type : HF or LF\n            String cardType = intent.getStringExtra(Defines.Keys.KEY_HID_ICLASS_DATA_TYPE);                  \n        } else if (intent.getAction().equals(Defines.IntentDefines.ACTION_HID_ICLASS_ERROR)) {\n            // Read failed (main cause is timeout)\n        }\n    }\n};\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Register the receiver, for example in onStart:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Override\nprotected void onStart() {\n    super.onStart();\n    // Registers iClass wedge intent receiver\n    IntentFilter intentFilter = new IntentFilter();\n    intentFilter.addAction(Defines.IntentDefines.ACTION_HID_ICLASS_SUCCESS);\n    intentFilter.addAction(Defines.IntentDefines.ACTION_HID_ICLASS_ERROR);\n    registerReceiver(iClassReceiver, intentFilter);\n}    \n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"And unregister it, in onStop for example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Override\nprotected void onStop() {\n    // Unregisters iClass wedge receiver\n    unregisterReceiver(iClassReceiver);\n    super.onStop();\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Trig a read:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\n// Starts Hid iClass wedge\nIntent sendIntent = new Intent();\nsendIntent.setPackage(BuildConfig.APPLICATION_ID);\nsendIntent.setAction(Defines.IntentDefines.ACTION_HID_ICLASS_SCAN);\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n    startForegroundService(intent);\n} else {\n    startService(intent);\n}\n")),(0,r.kt)("p",null,"If you don't want to declare CpcCore in your build, then here are\nstring values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'//Hid Iclass\npublic static final String ACTION_HID_ICLASS_SUCCESS = "fr.coppernic.intent.hid.iclasssuccess";\npublic static final String ACTION_HID_ICLASS_ERROR = "fr.coppernic.intent.hid.iclassfailed";\npublic static final String ACTION_HID_ICLASS_SERVICE_STOP = "fr.coppernic.intent.action.stop.hid.iclass.service";\npublic static final String ACTION_HID_ICLASS_SERVICE_START = "fr.coppernic.intent.action.start.hid.iclass.service";\npublic static final String ACTION_HID_ICLASS_SCAN = "fr.coppernic.intent.action.hid.iclass.SCAN";\n\npublic static final String KEY_HID_ICLASS_DATA_BYTES = "HidIclassDataBytes";\npublic static final String KEY_HID_ICLASS_DATA_CARD_NUMBER = "HidIclassDataCardNumber";\npublic static final String KEY_HID_ICLASS_DATA_COMPANY_CODE = "HidIclassDataCompanyCode";\npublic static final String KEY_HID_ICLASS_DATA_FACILITY_CODE = "HidIclassDataFacilityCode";\npublic static final String KEY_HID_ICLASS_DATA_PACS = "HidIclassDataPacs";\npublic static final String KEY_HID_ICLASS_DATA_TYPE = "HidIclassDataType";\npublic static final String KEY_HID_ICLASS_DATA_ERROR_MESSAGE = "HidIclassDataErrorMessage";\n')))}p.isMDXComponent=!0},2921:function(e,t,n){t.Z=n.p+"assets/images/iclass_settings-3b06a91062139560f2804660b6aba480.png"},3098:function(e,t,n){t.Z=n.p+"assets/images/iclass_settings_2-55cb20ad6511573671e5e01af6f33af1.png"}}]);