"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[5926],{3905:function(e,r,n){n.d(r,{Zo:function(){return d},kt:function(){return f}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function c(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?c(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=t.createContext({}),u=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},d=function(e){var r=u(e.components);return t.createElement(p.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},s=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,c=e.originalType,p=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),s=u(n),f=o,m=s["".concat(p,".").concat(f)]||s[f]||l[f]||c;return n?t.createElement(m,i(i({ref:r},d),{},{components:n})):t.createElement(m,i({ref:r},d))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=s;var a={};for(var p in r)hasOwnProperty.call(r,p)&&(a[p]=r[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<c;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2049:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return d},default:function(){return s}});var t=n(7462),o=n(3366),c=(n(7294),n(3905)),i=["components"],a={},p="OCR",u={unversionedId:"product/cone-eid/ocr",id:"product/cone-eid/ocr",isDocsHomePage:!1,title:"OCR",description:"C-One\xb2 e-ID",source:"@site/docs/product/cone-eid/ocr.md",sourceDirName:"product/cone-eid",slug:"/product/cone-eid/ocr",permalink:"/docs/product/cone-eid/ocr",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/product/cone-eid/ocr.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Finger print",permalink:"/docs/product/cone-eid/fingerprint"},next:{title:"PC/SC",permalink:"/docs/product/cone-eid/pcsc"}},d=[{value:"C-One\xb2 e-ID",id:"c-one-e-id",children:[{value:"OCR reading (Optional)",id:"ocr-reading-optional",children:[]}]}],l={toc:d};function s(e){var r=e.components,n=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,t.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"ocr"},"OCR"),(0,c.kt)("h2",{id:"c-one-e-id"},"C-One\xb2 e-ID"),(0,c.kt)("h3",{id:"ocr-reading-optional"},"OCR reading (Optional)"),(0,c.kt)("p",null,"C-One e-ID embeds an OCR reader for enrollment applications. It can read identify documents (2 lines and 3 lines)."),(0,c.kt)("p",null,"For reader management, documentation and sample code can be found ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/Coppernic/OcrSample"},"here"),"."))}s.isMDXComponent=!0}}]);